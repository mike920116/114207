---
description: 
globs: 
alwaysApply: false
---
# 專案結構指南

此 Flask 專案採用模組化結構，使用藍圖（Blueprint）和服務（Services）組織程式碼。

## 主要應用程式入口

主要入口點是 [app.py](mdc:app.py)，負責初始化 Flask 應用程式並設置所有必要的配置。

主要職責：
- Flask 應用程式初始化
- 藍圖註冊
- 登入管理器設置
- Socket.IO 初始化
- 環境變數載入

## 目錄結構

### 服務目錄
[services/](mdc:services) 目錄包含所有主要功能模組：

- **使用者模組** [services/user/](mdc:services/user)
  - 身份驗證和使用者管理
  - 使用者設定
  - 個人資料管理

- **日記模組** [services/diary/](mdc:services/diary)
  - 日記項目管理
  - 日記互動功能

- **管理員模組** [services/admin/](mdc:services/admin)
  - 管理功能
  - 使用者管理
  - 系統監控

- **AI 模組** [services/ai/](mdc:services/ai)
  - AI 聊天功能
  - AI 互動功能

### 模板和靜態檔案
- [templates/](mdc:templates): Jinja2 模板
- [static/](mdc:static): CSS、JavaScript 和其他靜態資源

### 工具函數
- [utils/](mdc:utils): 通用工具和資料庫連接

## 配置檔案
- [requirements.txt](mdc:requirements.txt): Python 套件依賴
- `.env`: 環境變數（不包含在版本控制中）

