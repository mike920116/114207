---
description: 
globs: 
alwaysApply: false
---
# 開發指南

## 專案設置

1. 安裝依賴套件：
```bash
pip install -r requirements.txt
```

2. 設置環境變數（.env）：
```
SECRET_KEY=你的密鑰
MAIL_SERVER=smtp.example.com
MAIL_PORT=587
MAIL_USERNAME=你的郵箱
MAIL_PASSWORD=你的密碼
MAIL_DEFAULT_SENDER=你的郵箱
```

## 程式碼規範

### Python 程式碼風格
- 遵循 PEP 8 規範
- 盡可能使用型別提示
- 為函數和類別添加文檔
- 使用有意義的變數名稱

### 藍圖開發
- 保持藍圖模組化
- 使用適當的錯誤處理
- 實現適當的日誌記錄
- 遵循 RESTful 原則

### 資料庫操作
- 始終使用連接池
- 正確關閉連接
- 使用參數化查詢
- 適當處理事務

### 錯誤處理
```python
try:
    # 操作
    logger.info("操作成功")
except Exception as e:
    logger.error(f"操作失敗：{e}")
    # 處理錯誤
finally:
    # 清理工作
```

## 測試

### 單元測試
- 為所有新功能編寫測試
- 維護測試覆蓋率
- 模擬外部依賴

### 整合測試
- 測試藍圖互動
- 驗證資料庫操作
- 檢查郵件功能

## 部署

### 生產環境設置
1. 設置生產資料庫
2. 配置郵件伺服器
3. 設置日誌記錄
4. 配置 SSL/TLS
5. 設置監控

### 環境變數
- 開發和生產環境使用不同的 .env 檔案
- 不要提交敏感資訊
- 記錄所有必需的變數

## 日誌記錄

### 日誌級別
- DEBUG：詳細資訊
- INFO：一般操作
- WARNING：潛在問題
- ERROR：嚴重問題
- CRITICAL：系統故障

### 日誌格式
```python
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
```



